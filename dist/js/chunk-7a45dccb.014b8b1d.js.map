{"version":3,"sources":["webpack:///./resources/adminapp/js/cruds/Tickets/Show.vue?83e9","webpack:///resources/adminapp/js/cruds/Tickets/Show.vue","webpack:///./resources/adminapp/js/cruds/Tickets/Show.vue?6792","webpack:///./resources/adminapp/js/cruds/Tickets/Show.vue","webpack:///./resources/adminapp/js/components/Maps/DirectionsRenderer.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","center","ref","staticStyle","attrs","marker","_m","lat","lng","on","startLocationUpdates","stopLocationUpdates","staticRenderFns","DirectionsRenderer","user","routingService","position","watchPositionId","computed","google","$router","push","console","log","error","message","updateMarkers","component","MapElementFactory","name","ctr","window","maps","events","mappedProps","options","zoomControl","props","origin","type","Object","destination","travelMode","String","afterCreate","directionsRenderer","directionsService","DirectionsService","$watch","setOptions","preserveViewport","setPanel","document","getElementById","route","drivingOptions","departureTime","Date","now","trafficModel","avoidTolls","response","status","setDirections"],"mappings":"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","file":"js/chunk-7a45dccb.014b8b1d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-8\"},[_vm._v(\"\\n  \"+_vm._s(_vm.center)+\"\\n  \"),_c('GmapMap',{ref:\"mapRef\",staticStyle:{\"width\":\"100%\",\"height\":\"800px\"},attrs:{\"center\":_vm.center,\"zoom\":15}},[_c('DirectionsRenderer',{attrs:{\"travelMode\":\"DRIVING\",\"origin\":_vm.center,\"destination\":_vm.marker}})],1)],1),_c('br'),_c('div',{staticClass:\"col-md-4\"},[_vm._m(0),_c('div',{staticClass:\"latLngLabel\"},[_vm._v(_vm._s(_vm.lat)+\", \"+_vm._s(_vm.lng))]),_c('button',{staticClass:\"btn btn-info\",on:{\"click\":_vm.startLocationUpdates}},[_c('i',{staticClass:\"circle dot outline icon large\"}),_vm._v(\"\\n      Start Location\\n    \")]),_c('button',{staticClass:\"btn btn-danger\",on:{\"click\":_vm.stopLocationUpdates}},[_c('i',{staticClass:\"circle dot outline icon large\"}),_vm._v(\"\\n      Stop Location\\n    \")])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",staticStyle:{\"background-color\":\"#228B22\"}},[_c('i',{staticClass:\"fa fa-university\"}),_c('strong',{staticStyle:{\"color\":\"white\"}},[_vm._v(\" Navigation Maps\")])]),_c('div',{staticClass:\"card-body\"},[_c('div',{attrs:{\"id\":\"panel\"}})])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-8\">\r\n    {{ center }}\r\n    <GmapMap\r\n      :center='center'\r\n      :zoom='15'\r\n      ref=\"mapRef\"\r\n      style='width:100%;  height: 800px;'\r\n    >\r\n      <DirectionsRenderer travelMode=\"DRIVING\" :origin=\"center\" :destination=\"marker\"/>\r\n    </GmapMap>\r\n    </div>\r\n    <br>\r\n    <div class=\"col-md-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\" style=\"background-color: #228B22;\">\r\n          <i class=\"fa fa-university\"> </i> <strong style=\"color:white;\"> Navigation Maps</strong>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div id=\"panel\"></div> \r\n        </div>\r\n      </div>   \r\n       <div class=\"latLngLabel\">{{lat}}, {{lng}}</div>\r\n      <button class=\"btn btn-info\" @click=\"startLocationUpdates\">\r\n        <i class=\"circle dot outline icon large\"></i>\r\n        Start Location\r\n      </button>\r\n\r\n      <button class=\"btn btn-danger\" @click=\"stopLocationUpdates\">\r\n        <i class=\"circle dot outline icon large\"></i>\r\n        Stop Location\r\n      </button>\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as fb from '../../firebase'\r\nimport DirectionsRenderer from '@components/Maps/DirectionsRenderer'\r\nimport {gmapApi} from 'vue2-google-maps'\r\n\r\nexport default {\r\n   components:{\r\n    DirectionsRenderer\r\n  },\r\n  data() {\r\n    return {\r\n      user: null,\r\n      center: { lat: 0, lng: 0 },\r\n      marker: { lat: 14.182127, lng: 121.282268 },\r\n      routingService:{},\r\n      lat:0,\r\n      lng:0,\r\n      position:'',\r\n      watchPositionId:null\r\n    };\r\n  },\r\n  computed: {\r\n    google: gmapApi\r\n  },\r\n  mounted() {\r\n    fb.auth.onAuthStateChanged(user => {\r\n      this.user = user;\r\n    });\r\n  },\r\n methods: {\r\n signOutButtonPressed() {\r\n    fb.auth.signOut()\r\n    .then(user => {\r\n        this.$router.push({\r\n        name: \"/\"\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.log(error.message);\r\n    });\r\n },\r\n startLocationUpdates() {\r\n   this.watchPositionId = navigator.geolocation.watchPosition(\r\n        position => {\r\n          this.lat = position.coords.latitude;\r\n          this.lng = position.coords.longitude;\r\n          this.updateLocation(this.lat, this.lng);\r\n          this.updateCenter(this.lat, this.lng);\r\n          console.log(this.lat);\r\n        },\r\n        error => {\r\n          console.log(error.message);\r\n        }\r\n    );\r\n      \r\n    },\r\n    stopLocationUpdates(){\r\n          navigator.geolocation.clearWatch(this.watchPositionId);\r\n    },\r\n    updateCenter(lat,lng){\r\n       this.center = {\r\n          lat: lat,\r\n          lng: lng\r\n      }\r\n    },\r\n    updateLocation(lat, lng) {\r\n     const updateData = {\r\n          latitude : lat,\r\n          longitude : lng   \r\n     };\r\n      fb.db_firebase.ref('driverTrips/'+ this.$route.params.id).update(updateData);\r\n      this.updateMarkers();\r\n    },\r\n     updateMarkers: function() {\r\n         this.$refs.mapRef.$mapPromise.then((map) => {\r\n            const trafficLayer = new google.maps.TrafficLayer();\r\n             trafficLayer.setMap(map)\r\n           })\r\n      } \r\n }\r\n}\r\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Show.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Show.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Show.vue?vue&type=template&id=58b74268&\"\nimport script from \"./Show.vue?vue&type=script&lang=js&\"\nexport * from \"./Show.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { MapElementFactory } from \"vue2-google-maps\";\r\n\r\nexport default MapElementFactory({\r\n  name: \"directionsRenderer\",\r\n\r\n  ctr() {\r\n    return window.google.maps.DirectionsRenderer;\r\n  },\r\n\r\n  events: ['directions_changed'],\r\n\r\n  mappedProps: {\r\n    options: { zoomControl: false },\r\n  },\r\n\r\n  props: {\r\n    origin: { type: Object },\r\n    destination: { type: Object },\r\n    travelMode: { type: String }\r\n  },\r\n  afterCreate(directionsRenderer) {\r\n    let directionsService = new window.google.maps.DirectionsService();\r\n  \r\n    this.$watch(\r\n      () => [this.origin, this.destination, this.travelMode],\r\n      () => {\r\n        let { origin, destination, travelMode } = this;\r\n        if (!origin || !destination || !travelMode) return;\r\n        \r\n        directionsRenderer.setOptions({\r\n          preserveViewport : true\r\n        });\r\n        directionsRenderer.setPanel(document.getElementById('panel'));\r\n        directionsService.route(\r\n          {\r\n            origin,\r\n            destination,\r\n            travelMode,\r\n            drivingOptions: {\r\n              departureTime: new Date(Date.now()),  // for the time N milliseconds from now.\r\n              trafficModel: 'optimistic'\r\n            },\r\n            avoidTolls: true\r\n          },\r\n          (response, status) => {\r\n            if (status !== \"OK\") return;\r\n            directionsRenderer.setDirections(response);\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n});\r\n"],"sourceRoot":""}